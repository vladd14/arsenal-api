openapi: 3.0.0
info:
  description: API СК Арсенал для взаимодействия с внешними агентами
  version: 1.0.0
  title: Arsenal Inventory API
  contact:
    name: API Support
    email: poddima@gmail.com
servers:
  - url: 'https://serveraddr/{versionAPI}'
    description: test server Arsenal Ins
    variables:
      versionAPI:
        default: v1

security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes

tags:
  - name: Agent
    description: Агент
  - name: Products
    description: Описание договоров страхования
  - name: Product
    description: 'Договор страхования (расчет полиса, оформление, отмена)'
  - name: Policy
    description: Pdf представление оформленного полиса

paths:

  /agent:
    get:
      description: Получить список агентов
      operationId: getAgentList
      tags:
        - Agent
      requestBody:
        description: 'фильтр агентов, если отсутсвует возращает всех прямых потомков'
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
      responses:
        '200':
          description: возвращает информацию об агентах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
    post:
      description: Создать агента
      operationId: createAgent
      tags:
        - Agent
      requestBody:
        description: параметры для создания агента
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAgent'
      responses:
        '201':
          description: возвращает созданного Агента
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'


  '/agent/{id}':
    parameters:
      - name: id
        description: id Агента
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Agent
      description: Получить описание агента
      operationId: getAgent
      responses:
        '200':
          description: возвращает информацию об Агенте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Изменить агента (обновить все поля)
      operationId: updateAgent
      tags:
        - Agent
      requestBody:
        description: параметры для изменения Агента 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAgent'
      responses:
        '200':
          description: возвращает информацию об Агенте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      description: Изменить агента (обновить некоторые поля)
      operationId: patchAgent
      tags:
        - Agent
      requestBody:
        description: параметры для изменения Агента 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchAgent'
      responses:
        '200':
          description: возвращает информацию об Агенте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'

  




  /product:
    get:
      description: >-
        ищет существующие договора / расчеты по параметрам в пределах области
        видимости
      operationId: getProductBaseList
      tags:
        - Product
      
      requestBody:
        description: фильтр по продуктам
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterPaginatedProductList'
      responses:
        '200':
          description: возвращает общую информацию о договорах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBaseList'
        '400':
          $ref: '#/components/responses/WrongParams'
        '404':
          $ref: '#/components/responses/NotFound'

  '/product/{id}':
    parameters:
      - name: id
        description: id продукта
        in: path
        required: true
        schema:
          type: integer
    get:
      description: возвращает общую информацию о договоре
      operationId: getProductInfo
      tags:
        - Product
      responses:
        '200':
          description: возвращает общую информацию о договоре
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBase'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'


  /product/{id}/publish:
    parameters:
      - name: id
        description: id продукта
        in: path
        required: true
        schema:
          type: integer
    post:
      description: подтверждение на выпуск (оформление) продукта
      operationId: publishProduct
      tags:
        - Product
      requestBody:
        description: Параметры подтверждающие валидность запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signedPostProduct'

      responses:
        '201':
          description: возврат общей информации о договоре если он выпущен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBase'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'
    

  /product/{id}/cancel:
    parameters:
      - name: id
        description: id продукта
        in: path
        required: true
        schema:
          type: integer
    post:
      description: Аннулирование договора
      operationId: annulmentProduct
      tags:
        - Product
      requestBody:
        description: Параметры подтверждающие валидность запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signedPostProduct'

      responses:
        '201':
          description: возврат общей информации о договоре если он аннулирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBase'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'

  /product/combo-flight:
    get:
      description: Получить список договоров комбинированного страхования пассажиров
      operationId: getProductComboFlightList
      tags:
        - Product
      requestBody:
        description: 'фильтр по парамтрам договора'
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterProductComboFlight'
      responses:
        '200':
          description: возвращает информацию о договорах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductComboFlightList'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
    post:
      description: Создать расчет договора комбинированного страхования пассажиров
      operationId: createProductComboFlight
      tags:
        - Product
      requestBody:
        description: параметры для создания расчета договора комбинированного страхования пассажиров
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProductComboFlight'
      responses:
        '201':
          description: возвращает созданный расчет договора комбинированного страхования пассажиров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductComboFlight'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'

  '/product/combo-flight/{id}':
    parameters:
      - name: id
        description: id расчет договора комбинированного страхования пассажиров
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Product
      description: Получить описание расчета договора комбинированного страхования пассажиров
      operationId: getProductComboFlight
      responses:
        '200':
          description: возвращает информацию о расчете договора комбинированного страхования пассажиров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductComboFlight'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Изменить расчет (обновить все поля)
      operationId: updateProductComboFlight
      tags:
        - Product
      requestBody:
        description: параметры для изменения ProductComboFlight
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProductComboFlight'
      responses:
        '200':
          description: возвращает информацию о расчете
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductComboFlight'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      description: Изменить расчет (обновить некоторые поля)
      operationId: patchProductComboFlight
      tags:
        - Product
      requestBody:
        description: параметры для изменения расчета
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProductComboFlight'
      responses:
        '200':
          description: возвращает информацию о расчете
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductComboFlight'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'

  /product/vzr:
    get:
      description: Получить список договоров страхования выезжающих за рубеж
      operationId: getProductVZRList
      tags:
        - Product
      requestBody:
        description: 'фильтр по параметрам договора'
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterProductVZR'
      responses:
        '200':
          description: возвращает информацию о договорах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVZRList'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
    post:
      description: Создать расчет договора страхования выезжающих за рубеж
      operationId: createProductVZR
      tags:
        - Product
      requestBody:
        description: параметры для создания расчета страхования выезжающих за рубеж
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProductVZR'
      responses:
        '201':
          description: возвращает созданный расчет договора страхования выезжающих за рубеж
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVZR'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'


  '/product/vzr/{id}':
    parameters:
      - name: id
        description: id расчет договора страхования выезжающих за рубеж
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - Product
      description: Получить описание расчета договора страхования выезжающих за рубеж
      operationId: getProductVZR
      responses:
        '200':
          description: возвращает информацию о расчете страхования выезжающих за рубеж
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVZR'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      description: Изменить расчет (обновить все поля)
      operationId: updateProductVZR
      tags:
        - Product
      requestBody:
        description: параметры для изменения ProductVZR
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProductVZR'
      responses:
        '200':
          description: возвращает информацию о расчете
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVZR'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      description: Изменить расчет (обновить некоторые поля)
      operationId: patchProductComboFlight
      tags:
        - Product
      requestBody:
        description: параметры для изменения расчета
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProductVZR'
      responses:
        '200':
          description: возвращает информацию о расчете
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVZR'
        '400':
          $ref: '#/components/responses/WrongParams'
        '403':
          $ref: '#/components/responses/ActionNotPermitted'
        '404':
          $ref: '#/components/responses/NotFound'

  /products:
    get:
      description: возвращает массив всех доступных вариантов продуктов для оформления
      operationId: getProductTypesList
      tags:
        - Products

      responses:
        '200':
          description: Список всех доступных вариантов продуктов для оформления
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypesList'


  '/products/{id}':
    parameters:
      - name: id
        description: id варианта продукта для оформления
        in: path
        required: true

        schema:
          type: integer
    get:
      description: возвращает описание варианта продукта для оформления по его id
      tags:
        - Products
      operationId: getProductTypeDescription

      responses:
        '200':
          description: описание варианта продукта для оформления
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
        '404':
          $ref: '#/components/responses/NotFound'


  '/policy/{uuid}.pdf':
    parameters:
      - name: uuid
        description: uuid оформленного полиса для печати
        in: path
        required: true
        schema:
          type: string
    get:
      description: возвращает оформленного полиса для печати по его uuid в формате pdf
      tags:
        - Policy
      operationId: getProductPdf

      responses:
        '200':
          description: оформленный полис для печати по его uuid в формате pdf
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ProductPdf'
        '404':
          $ref: '#/components/responses/NotFound'


components:
  schemas:


    InsurenceRulesType:
      description: 'Вид правил страхования. combo_flight - страхование пассажиров, vzr - страхование выезжающих за рубеж'
      type: string
      enum:
        - vzr
        - combo_flight
      default: combo_flight

    ProductType:
      description: Тип договора страхования
      type: object
      properties:
        id:
          description: Идентификатор
          type: integer
        name:
          description: Название
          type: string
        rules_type:
          $ref: '#/components/schemas/InsurenceRulesType'
        rules_version:
          description: 'Версия правил'
          type: integer
        tariff_version:
          description: 'Версия тарифов'
          type: integer

    ProductTypesList:
      description: Список ProductType
      allOf:
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/ProductType'
        - $ref: '#/components/schemas/Paginator'

    ProductState:
      description: Структура описывающая статус договора
      type: string
      enum:
        - draft
        - published
        - cancelled
      default: draft

    Product:
      description: Договор страхования
      allOf:
        - $ref: '#/components/schemas/createProduct'
        - type: object
          properties:
            # расширяет createProduct
            id:
              type: integer
            date_create:
              type: string
              format: date-time
            date_modify:
              type: string
              format: date-time
            date_start:
              type: string
              format: date-time
            date_end:
              type: string
              format: date-time
            date_sale:
              type: string
              format: date-time
            date_cancelled:
              type: string
              format: date-time
            policy_series:
              type: string
            policy_number:
              type: number

            pdf_url:
              description: Ссылка на скачивание pdf
              type: string

            state:
              $ref: '#/components/schemas/ProductState'

            price:
              description: СП полиса
              type: number
              format: decimal

            price_currency:
              description: Код валюты СП
              $ref: '#/components/schemas/Currency'

    ProductBaseReadOnlyFields:
      type: object
      properties:
        id:
          type: integer
        date_create:
          type: string
          format: date-time
        date_modify:
          type: string
          format: date-time
        date_sale:
          type: string
          format: date-time
        date_cancelled:
          type: string
          format: date-time
        policy_series:
          type: string
        policy_number:
          type: number

        pdf_url:
          description: Ссылка на скачивание pdf
          type: string
          format: url

        url:
          description: Ссылка на полное описание полиса / расчета
          type: string
          format: url

        state:
          $ref: '#/components/schemas/ProductState'
        price:
          description: СП полиса
          type: number
          format: decimal
        price_currency:
          description: Код валюты СП
          $ref: '#/components/schemas/Currency'

    ProductBasePolicyFields:
      type: object
      properties:
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        product_type:
          description: id ProductType - Типа договора страхования
          type: integer
        agent:
          description: id Agent
          type: integer

    ProductBase:
      description: Общая Информация о договоре страхования
      allOf:
        - $ref: '#/components/schemas/ProductBasePolicyFields'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/ProductBaseReadOnlyFields'

    ProductBaseList:
      description: Список расчетов / договоров
      allOf:
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/Paginator'

      type: object
      properties:
        count:
          type: integer
          description: 'The total number of objects, across all pages'
        num_pages:
          type: integer
          description: The total number of pages
        products:
          $ref: '#/components/schemas/ProductBaseList'

    filterPaginatedProductList:
      description: >-
        получеам список договоров отфильтрованный по дате последнего активного
        изменения
      type: object
      properties:
        date_start:
          description: С какой даты фильтровать вывод
          type: string
          format: date-time
        date_end:
          description: По какую дату фильтровать вывод
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/ProductState'
        agent_id:
          description: >-
            id Агента по которому фильтруем, если агент имеет потомков, то
            выдаем и договоры его потомков
          type: integer
        insurence_rules_type:
          $ref: '#/components/schemas/InsurenceRulesType'
        page:
          description: Номер страницы результатов
          type: integer
        limit:
          type: integer
          maximum: 10000
          default: 10000

    Person:
      description: 'ФЛ, застрахованное лицо'
      type: object
      properties:
        name:
          description: ФИО
          type: string
        sex:
          description: Пол
          type: string
          enum:
            - male
            - female
            - undefined
          default: undefined
        birthday:
          description: Дата рождения
          type: string
          format: date
        document_type:
          description: Тип документа подтверждающего личность
          type: string
          enum:
            - passport
            - certificate of birth
          default: passport
        document_series:
          description: Серия документа
          type: string
        document_number:
          description: Номер документа
          type: string
        email:
          description: Email
          type: string
        phone:
          description: Номер телефона
          type: string
    Flight:
      description: 'Перелет, рейс'
      type: object
      properties:
        ticket_number:
          description: Серия номер билета
          type: string
        PNR:
          description: PNR (№ брони)
          type: string
        carrier_code:
          description: Код перевозчика
          type: string
        flight_number:
          description: Номер рейса
          type: string
        airport_of_departure:
          description: Аэропорт (город) вылета
          type: string
        arrival_airport:
          description: Аэропорт (город) прилета
          type: string
        departure_date:
          description: Дата вылета
          type: string
          format: date-time
        date_of_arrival:
          description: Дата прилета
          type: string
          format: date-time
    FlightList:
      description: Список перелетов
      type: array
      items:
        $ref: '#/components/schemas/Flight'

    createProductComboFlight:
      description: Параметры для создания расчета combo_flight - страхование пассажиров
      type: object
      discriminator:
        propertyName: product_type
      allOf:
        - $ref: '#/components/schemas/ProductBasePolicyFields'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/ParamsComboFlight'

    createProductVZR:
      description: Параметры для создания расчета vzr - страхование выезжающих за рубеж
      type: object
      discriminator:
        propertyName: product_type
      allOf:
        - $ref: '#/components/schemas/ProductBasePolicyFields'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/ParamsVZR'

    createProduct:
      description: Параметры для создания расчета
      oneOf:
        - $ref: '#/components/schemas/createProductComboFlight'
        - $ref: '#/components/schemas/createProductVZR'
      properties:
        agent_id:
          description: id Агента

    updateProduct:
      description: Параметры для обновления расчета
      oneOf:
        - $ref: '#/components/schemas/createProductComboFlight'
        - $ref: '#/components/schemas/createProductVZR'

    Agent:
      description: структура описывающая агента
      allOf:
        - type: object
          properties:
            id:
              description: Уникальный номер агента
              type: integer
        - $ref: '#/components/schemas/createAgent'
    
    AgentList:
      description: Список агентов
      allOf:
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/Agent'
        - $ref: '#/components/schemas/Paginator'

    createAgent:
      description: список параметров для создания / обновления Агента
      allOf:
        - $ref: '#/components/schemas/patchAgent'
          required:
             - name
             - parent
             - legal_type

    patchAgent:
      description: список параметров для частичного обновления Агента
      type: object
      properties:
        name:
          description: Название агента
          type: string
        state_active:
          description: 'Статус агента, агент имеет доступ к системе'
          type: boolean
        can_create_sub_agents:
          description: Агент может создавать суб агентов
          type: boolean
        parent:
          description: id Агента к которому пренадлежит данный субагент
          type: integer
        legal_type:
          description: 'Тип агента. ЮЛ, ИП, ФЛ'
          type: string
          enum:
            - legal
            - self_businessman
            - person
          default: legal
        can_publish_policy:
          description: Агент может издавать договора
          type: boolean
          default: true

    ErrorCode:
      type: object
      properties:
        code:
          type: string
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке

    ErrorCodeList:
      type: array
      items:
        $ref: '#/components/schemas/ErrorCode'

    SignedData:
      description: Подписанные данные
      type: object
      properties:
        query_data:
          description: Данные подписанные закрытым ключом
          type: string
        sign:
          description: Подпись
          type: string

    signedPostProduct:
      description: Подписанный запрос на выпуск договора страхования
      allOf:
        - $ref: '#/components/schemas/SignedData'
    signedResponseProduct:
      description: Подписанный запрос на выпуск договора страхования
      allOf:
        - $ref: '#/components/schemas/SignedData'
    filterProductComboFlight:
      description: Фильтр для ProductComboFlight
      type: object
    ProductComboFlightList:
      description: Список ProductComboFlight
      allOf:
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/ProductComboFlight'
        - $ref: '#/components/schemas/Paginator'
    updateProductComboFlight:
      description: Параметры для обновления ProductComboFlight
      type: object
    ProductComboFlight:
      description: Модель ProductComboFlight
      type: object
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/ParamsComboFlight'

    # ***********

    filterProductVZR:
      description: Фильтр для ProductVZR
      type: object
    ProductVZRList:
      description: Список ProductVZR
      allOf:
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/ProductVZR'
        - $ref: '#/components/schemas/Paginator'
    updateProductVZR:
      description: Параметры для обновления ProductVZR
      type: object

      allOf:
        - $ref: '#/components/schemas/createProductVZR'
    ProductVZR:
      description: Модель ProductVZR
      type: object
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - $ref: '#/components/schemas/ParamsVZR'
    ParamsVZR:
      description: Параметры для ProductVZR
      type: object
      properties:
        med_program:
          description: Программа страхования медецинских расходов
          type: string
          enum:
            - A
            - B
            - C
          default: A

        insurance_limit:
          description: Страховая сумма (лимит покрытия)
          type: number
          format: decimal

        insurance_limit_currency:
          description: Код валюты CC
          $ref: '#/components/schemas/Currency'

        countryList:
          description: Список стран
          type: array
          items:
            type: string
            description: ALPHA3 код страны

    ParamsComboFlight:
      description: Параметры для ProductComboFlight
      type: object
      properties:
        flights:
          $ref: '#/components/schemas/FlightList'

    ProductPdf:
      description: полис в формате Pdf
      type: string
      format: binary

    Paginator:
      description: Пагинатор
      type: object
      properties:
        count:
          description: Всего записей
          type: integer
        next:
          description: Ссылка на следующую страницу
          type: string
          format: url
        previous:
          description: Ссылка на предыдущую страницу
          type: string
          format: url
    Currency:
      type: string
      enum:
        - USD
        - EUR
        - RUB
      default: RUB


  responses:
    WrongParams:
      description: Неверные параметры
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorCodeList'
    Forbidden:
      description: Доступ запрещен
    ActionNotPermitted:
      description: Действие запрещено
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorCodeList'
    NotFound:
      description: Ненайдено
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
